//Jessy's Customer Stuff

// http://127.0.0.1:8080/TravelExpertsOOSDJSP2/rs/TEREST/getcustomers
					@GET
					@Path("/getcustomers")
					@Produces(MediaType.APPLICATION_JSON)
					public String getCustomers()
					{
						EntityManagerFactory factory = Persistence.createEntityManagerFactory("TravelExpertsOOSDJSP2");
						EntityManager em = factory.createEntityManager();
						
						Query query = em.createQuery("select c from Customer c");
						List<Customer> list = query.getResultList();
						
						Gson gson = new Gson();
						Type type = new TypeToken<List<Customer>>() {}.getType();
						
						return gson.toJson(list, type);
					}
					
////				// http://127.0.0.1:8080/TravelExpertsOOSDJSP2/rs/TEREST/getcustomer/
					@GET
					@Path("/getcustomer/{customerId}")
					@Produces(MediaType.APPLICATION_JSON)
					public String getCustomer(@PathParam("customerId") int customerId)
					{
						EntityManagerFactory factory = Persistence.createEntityManagerFactory("TravelExpertsOOSDJSP2");
						EntityManager em = factory.createEntityManager();
						
						Customer foundCustomer = em.find(Customer.class, customerId);
						
						Gson gson = new Gson();
						
						em.close();
						
						return gson.toJson(foundCustomer);
					}
					
					// http://127.0.0.1:8080/TravelExpertsOOSDJSP2/rs/TEREST/getcustomerlist 
					@GET
					@Path("/getcustomerlist/{ id }")
					@Produces(MediaType.APPLICATION_JSON)
					public String getCustomerList(@PathParam("id") int custId)
					{
						EntityManagerFactory factory = Persistence.createEntityManagerFactory("TravelExpertsOOSDJSP2");
						EntityManager em = factory.createEntityManager();
						
						Query query = em.createQuery("select c from Customer c where c.customerId = '" + custId + "'");
						List<Customer> list = query.getResultList();
						JsonArray jsonCustomerArray = new JsonArray();
						for (int i=0; i<list.size(); i++)
						{
							Customer c = list.get(i);
							JsonObject obj = new JsonObject();
							obj.addProperty("CustomerId", c.getCustomerId());
							obj.addProperty("CustFirstName", c.getCustFirstName());
							obj.addProperty("CustLastName", c.getCustLastName());
							obj.addProperty("CustEmail", c.getCustEmail());
							obj.addProperty("CustBusPhone", c.getCustBusPhone());
							obj.addProperty("CustAddress", c.getCustAddress());
							jsonCustomerArray.add(obj);
						}
						
						return jsonCustomerArray.toString();
					}
          
          @POST
					@Path("/postcustomer/")
				    @Produces(MediaType.TEXT_PLAIN)
					@Consumes(MediaType.APPLICATION_JSON)
					public String postCustomer(String jsonString) {
						EntityManagerFactory factory 
							= Persistence.createEntityManagerFactory("TravelExpertsOOSDJSP2");
						EntityManager em = factory.createEntityManager();
						
						Gson gson = new Gson();
						Type type = new TypeToken<Customer>() {}.getType();
						Customer customer = gson.fromJson(jsonString, type);
						em.getTransaction().begin();
						Customer newCustomer = em.merge(customer);
						em.getTransaction().commit();
						em.close();
						factory.close();

				        return "Customer was updated";	
					}
